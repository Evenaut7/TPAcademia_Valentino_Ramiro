@page "/admin/alumnos/crear"
@page "/admin/alumnos/editar/{Id:int}"
@using API.Clients
@using DTOs
@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime

@* ... (Implementación de formulario con EditForm, InputText, etc., como en la sugerencia anterior) ... *@

@code {
    [Parameter]
    public int Id { get; set; } // 0 si es Crear, ID > 0 si es Editar

    private AlumnoDTO alumno = new AlumnoDTO();
    private bool IsEditMode => Id != 0;

    // ... (Implementación de OnParametersSetAsync para cargar datos en modo Edición) ...

    private async Task HandleSubmit()
    {
        try
        {
            if (IsEditMode)
            {
                // Llama al método UpdateAsync del cliente API
                await AlumnoApiClient.UpdateAsync(alumno);
            }
            else
            {
                // Llama al método CreateAsync del cliente API (Asumido en su estructura)
                await AlumnoApiClient.AddAsync(alumno);
            }

            // Redirigir al listado
            NavManager.NavigateTo("/admin/alumnos");
        }
        catch (Exception ex)
        {
            // Manejo de errores
        }
    }
}